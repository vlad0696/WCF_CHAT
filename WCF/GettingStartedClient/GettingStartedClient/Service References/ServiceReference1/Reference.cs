//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GettingStartedClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="rooms", Namespace="http://schemas.datacontract.org/2004/07/GettingStartedLib")]
    [System.SerializableAttribute()]
    public partial class rooms : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] people_spisokField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string roomsMemberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] people_spisok {
            get {
                return this.people_spisokField;
            }
            set {
                if ((object.ReferenceEquals(this.people_spisokField, value) != true)) {
                    this.people_spisokField = value;
                    this.RaisePropertyChanged("people_spisok");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="rooms")]
        public string roomsMember {
            get {
                return this.roomsMemberField;
            }
            set {
                if ((object.ReferenceEquals(this.roomsMemberField, value) != true)) {
                    this.roomsMemberField = value;
                    this.RaisePropertyChanged("roomsMember");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/GettingStartedLib")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GettingStartedClient.ServiceReference1.people CurrentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GettingStartedClient.ServiceReference1.people CurrentUser {
            get {
                return this.CurrentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrentUserField, value) != true)) {
                    this.CurrentUserField = value;
                    this.RaisePropertyChanged("CurrentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMessage {
            get {
                return this.UserMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.UserMessageField, value) != true)) {
                    this.UserMessageField = value;
                    this.RaisePropertyChanged("UserMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="people", Namespace="http://schemas.datacontract.org/2004/07/GettingStartedLib")]
    [System.SerializableAttribute()]
    public partial class people : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RoomsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Rooms {
            get {
                return this.RoomsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomsField, value) != true)) {
                    this.RoomsField = value;
                    this.RaisePropertyChanged("Rooms");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IChat", CallbackContract=typeof(GettingStartedClient.ServiceReference1.IChatCallback))]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Subscribe", ReplyAction="http://tempuri.org/IChat/SubscribeResponse")]
        bool Subscribe(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Subscribe", ReplyAction="http://tempuri.org/IChat/SubscribeResponse")]
        System.Threading.Tasks.Task<bool> SubscribeAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/UnSubscribe", ReplyAction="http://tempuri.org/IChat/UnSubscribeResponse")]
        bool UnSubscribe();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/UnSubscribe", ReplyAction="http://tempuri.org/IChat/UnSubscribeResponse")]
        System.Threading.Tasks.Task<bool> UnSubscribeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/GetData", ReplyAction="http://tempuri.org/IChat/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/GetData", ReplyAction="http://tempuri.org/IChat/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/send_all", ReplyAction="http://tempuri.org/IChat/send_allResponse")]
        string send_all();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/send_all", ReplyAction="http://tempuri.org/IChat/send_allResponse")]
        System.Threading.Tasks.Task<string> send_allAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/create_private_room", ReplyAction="http://tempuri.org/IChat/create_private_roomResponse")]
        void create_private_room(GettingStartedClient.ServiceReference1.rooms room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/create_private_room", ReplyAction="http://tempuri.org/IChat/create_private_roomResponse")]
        System.Threading.Tasks.Task create_private_roomAsync(GettingStartedClient.ServiceReference1.rooms room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/send_private_message", ReplyAction="http://tempuri.org/IChat/send_private_messageResponse")]
        string send_private_message();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/send_private_message", ReplyAction="http://tempuri.org/IChat/send_private_messageResponse")]
        System.Threading.Tasks.Task<string> send_private_messageAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/entry_in_chat", ReplyAction="http://tempuri.org/IChat/entry_in_chatResponse")]
        string entry_in_chat();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/entry_in_chat", ReplyAction="http://tempuri.org/IChat/entry_in_chatResponse")]
        System.Threading.Tasks.Task<string> entry_in_chatAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/craete_new_man", ReplyAction="http://tempuri.org/IChat/craete_new_manResponse")]
        string craete_new_man(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/craete_new_man", ReplyAction="http://tempuri.org/IChat/craete_new_manResponse")]
        System.Threading.Tasks.Task<string> craete_new_manAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Subscribe_room", ReplyAction="http://tempuri.org/IChat/Subscribe_roomResponse")]
        bool Subscribe_room(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Subscribe_room", ReplyAction="http://tempuri.org/IChat/Subscribe_roomResponse")]
        System.Threading.Tasks.Task<bool> Subscribe_roomAsync(string Name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendMessage", ReplyAction="http://tempuri.org/IChat/SendMessageResponse")]
        void SendMessage(GettingStartedClient.ServiceReference1.Message message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendMessage", ReplyAction="http://tempuri.org/IChat/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(GettingStartedClient.ServiceReference1.Message message);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/on_new_message")]
        void on_new_message(string new_message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/on_create_new_room")]
        void on_create_new_room(string new_room);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : GettingStartedClient.ServiceReference1.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<GettingStartedClient.ServiceReference1.IChat>, GettingStartedClient.ServiceReference1.IChat {
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool Subscribe(string Name) {
            return base.Channel.Subscribe(Name);
        }
        
        public System.Threading.Tasks.Task<bool> SubscribeAsync(string Name) {
            return base.Channel.SubscribeAsync(Name);
        }
        
        public bool UnSubscribe() {
            return base.Channel.UnSubscribe();
        }
        
        public System.Threading.Tasks.Task<bool> UnSubscribeAsync() {
            return base.Channel.UnSubscribeAsync();
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public string send_all() {
            return base.Channel.send_all();
        }
        
        public System.Threading.Tasks.Task<string> send_allAsync() {
            return base.Channel.send_allAsync();
        }
        
        public void create_private_room(GettingStartedClient.ServiceReference1.rooms room) {
            base.Channel.create_private_room(room);
        }
        
        public System.Threading.Tasks.Task create_private_roomAsync(GettingStartedClient.ServiceReference1.rooms room) {
            return base.Channel.create_private_roomAsync(room);
        }
        
        public string send_private_message() {
            return base.Channel.send_private_message();
        }
        
        public System.Threading.Tasks.Task<string> send_private_messageAsync() {
            return base.Channel.send_private_messageAsync();
        }
        
        public string entry_in_chat() {
            return base.Channel.entry_in_chat();
        }
        
        public System.Threading.Tasks.Task<string> entry_in_chatAsync() {
            return base.Channel.entry_in_chatAsync();
        }
        
        public string craete_new_man(string name) {
            return base.Channel.craete_new_man(name);
        }
        
        public System.Threading.Tasks.Task<string> craete_new_manAsync(string name) {
            return base.Channel.craete_new_manAsync(name);
        }
        
        public bool Subscribe_room(string Name) {
            return base.Channel.Subscribe_room(Name);
        }
        
        public System.Threading.Tasks.Task<bool> Subscribe_roomAsync(string Name) {
            return base.Channel.Subscribe_roomAsync(Name);
        }
        
        public void SendMessage(GettingStartedClient.ServiceReference1.Message message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(GettingStartedClient.ServiceReference1.Message message) {
            return base.Channel.SendMessageAsync(message);
        }
    }
}
