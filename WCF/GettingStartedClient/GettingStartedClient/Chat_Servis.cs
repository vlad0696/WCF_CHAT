//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GettingStartedLib
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="People", Namespace="http://schemas.datacontract.org/2004/07/GettingStartedLib")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(GettingStartedLib.Message))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    public partial class People : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private object CallbackField;
        
        private string NameField;
        
        private string[] RoomsField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object Callback
        {
            get
            {
                return this.CallbackField;
            }
            set
            {
                this.CallbackField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Rooms
        {
            get
            {
                return this.RoomsField;
            }
            set
            {
                this.RoomsField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/GettingStartedLib")]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string CurrentUserField;
        
        private string UserMessageField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrentUser
        {
            get
            {
                return this.CurrentUserField;
            }
            set
            {
                this.CurrentUserField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserMessage
        {
            get
            {
                return this.UserMessageField;
            }
            set
            {
                this.UserMessageField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IChat", CallbackContract=typeof(IChatCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
public interface IChat
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Subscribe", ReplyAction="http://tempuri.org/IChat/SubscribeResponse")]
    bool Subscribe(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Subscribe", ReplyAction="http://tempuri.org/IChat/SubscribeResponse")]
    System.Threading.Tasks.Task<bool> SubscribeAsync(string Name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/UnSubscribe", ReplyAction="http://tempuri.org/IChat/UnSubscribeResponse")]
    bool UnSubscribe();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/UnSubscribe", ReplyAction="http://tempuri.org/IChat/UnSubscribeResponse")]
    System.Threading.Tasks.Task<bool> UnSubscribeAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/CreatePrivateRoom", ReplyAction="http://tempuri.org/IChat/CreatePrivateRoomResponse")]
    void CreatePrivateRoom(GettingStartedLib.People Man, string NameOfRoom);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/CreatePrivateRoom", ReplyAction="http://tempuri.org/IChat/CreatePrivateRoomResponse")]
    System.Threading.Tasks.Task CreatePrivateRoomAsync(GettingStartedLib.People Man, string NameOfRoom);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/AddUserToPrivateRoom", ReplyAction="http://tempuri.org/IChat/AddUserToPrivateRoomResponse")]
    void AddUserToPrivateRoom(string UserName, string Room);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/AddUserToPrivateRoom", ReplyAction="http://tempuri.org/IChat/AddUserToPrivateRoomResponse")]
    System.Threading.Tasks.Task AddUserToPrivateRoomAsync(string UserName, string Room);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendPrivateMessage", ReplyAction="http://tempuri.org/IChat/SendPrivateMessageResponse")]
    void SendPrivateMessage(GettingStartedLib.Message NewMessage, string PrivateRoom);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendPrivateMessage", ReplyAction="http://tempuri.org/IChat/SendPrivateMessageResponse")]
    System.Threading.Tasks.Task SendPrivateMessageAsync(GettingStartedLib.Message NewMessage, string PrivateRoom);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/CreateNewMan", ReplyAction="http://tempuri.org/IChat/CreateNewManResponse")]
    void CreateNewMan(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/CreateNewMan", ReplyAction="http://tempuri.org/IChat/CreateNewManResponse")]
    System.Threading.Tasks.Task CreateNewManAsync(string name);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendMessage", ReplyAction="http://tempuri.org/IChat/SendMessageResponse")]
    void SendMessage(GettingStartedLib.Message message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendMessage", ReplyAction="http://tempuri.org/IChat/SendMessageResponse")]
    System.Threading.Tasks.Task SendMessageAsync(GettingStartedLib.Message message);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatCallback
{
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/OnNewMessage")]
    void OnNewMessage(string new_message);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/OnNewUser")]
    void OnNewUser(string Usver_name);
    
    [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/OnCreateNewRoom")]
    void OnCreateNewRoom(string new_room);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IChatChannel : IChat, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class ChatClient : System.ServiceModel.DuplexClientBase<IChat>, IChat
{
    
    public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
            base(callbackInstance)
    {
    }
    
    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
            base(callbackInstance, endpointConfigurationName)
    {
    }
    
    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, endpointConfigurationName, remoteAddress)
    {
    }
    
    public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(callbackInstance, binding, remoteAddress)
    {
    }
    
    public bool Subscribe(string Name)
    {
        return base.Channel.Subscribe(Name);
    }
    
    public System.Threading.Tasks.Task<bool> SubscribeAsync(string Name)
    {
        return base.Channel.SubscribeAsync(Name);
    }
    
    public bool UnSubscribe()
    {
        return base.Channel.UnSubscribe();
    }
    
    public System.Threading.Tasks.Task<bool> UnSubscribeAsync()
    {
        return base.Channel.UnSubscribeAsync();
    }
    
    public void CreatePrivateRoom(GettingStartedLib.People Man, string NameOfRoom)
    {
        base.Channel.CreatePrivateRoom(Man, NameOfRoom);
    }
    
    public System.Threading.Tasks.Task CreatePrivateRoomAsync(GettingStartedLib.People Man, string NameOfRoom)
    {
        return base.Channel.CreatePrivateRoomAsync(Man, NameOfRoom);
    }
    
    public void AddUserToPrivateRoom(string UserName, string Room)
    {
        base.Channel.AddUserToPrivateRoom(UserName, Room);
    }
    
    public System.Threading.Tasks.Task AddUserToPrivateRoomAsync(string UserName, string Room)
    {
        return base.Channel.AddUserToPrivateRoomAsync(UserName, Room);
    }
    
    public void SendPrivateMessage(GettingStartedLib.Message NewMessage, string PrivateRoom)
    {
        base.Channel.SendPrivateMessage(NewMessage, PrivateRoom);
    }
    
    public System.Threading.Tasks.Task SendPrivateMessageAsync(GettingStartedLib.Message NewMessage, string PrivateRoom)
    {
        return base.Channel.SendPrivateMessageAsync(NewMessage, PrivateRoom);
    }
    
    public void CreateNewMan(string name)
    {
        base.Channel.CreateNewMan(name);
    }
    
    public System.Threading.Tasks.Task CreateNewManAsync(string name)
    {
        return base.Channel.CreateNewManAsync(name);
    }
    
    public void SendMessage(GettingStartedLib.Message message)
    {
        base.Channel.SendMessage(message);
    }
    
    public System.Threading.Tasks.Task SendMessageAsync(GettingStartedLib.Message message)
    {
        return base.Channel.SendMessageAsync(message);
    }
}
